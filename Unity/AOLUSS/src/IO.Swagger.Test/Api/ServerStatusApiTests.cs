//*****************************************************************************
//* Project: Firefly (Microsoft Hackaton 2020)
//* Description: AOLUSS REST Client
//* Author: Mark West (mark.west@microsoft.com)
//*****************************************************************************

/* 
 * NASA AOLUSS Operator interface
 *
 * this OAS document describes the operator interface for the AOLUSS.
 *
 * OpenAPI spec version: 2.1.8
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using AolussClientLib.Client;
using AolussClientLib.Api;

namespace AolussClientLib.Test
{
    /// <summary>
    ///  Class for testing ServerStatusApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ServerStatusApiTests
    {
        private ServerStatusApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ServerStatusApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ServerStatusApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ServerStatusApi
            //Assert.IsInstanceOfType(typeof(ServerStatusApi), instance, "instance is a ServerStatusApi");
        }

        /// <summary>
        /// Test GetOperatorStatus
        /// </summary>
        [Test]
        public void GetOperatorStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetOperatorStatus();
            
        }
    }

}
