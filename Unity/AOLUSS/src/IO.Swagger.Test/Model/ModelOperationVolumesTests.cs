//*****************************************************************************
//* Project: Firefly (Microsoft Hackaton 2020)
//* Description: AOLUSS REST Client
//* Author: Mark West (mark.west@microsoft.com)
//*****************************************************************************

/* 
 * NASA AOLUSS Operator interface
 *
 * this OAS document describes the operator interface for the AOLUSS.
 *
 * OpenAPI spec version: 2.1.8
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using AolussClientLib.Api;
using AolussClientLib.Model;
using AolussClientLib.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace AolussClientLib.Test
{
    /// <summary>
    ///  Class for testing ModelOperationVolumes
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ModelOperationVolumesTests
    {
        // TODO uncomment below to declare an instance variable for ModelOperationVolumes
        //private ModelOperationVolumes instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ModelOperationVolumes
            //instance = new ModelOperationVolumes();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ModelOperationVolumes
        /// </summary>
        [Test]
        public void ModelOperationVolumesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ModelOperationVolumes
            //Assert.IsInstanceOfType<ModelOperationVolumes> (instance, "variable 'instance' is a ModelOperationVolumes");
        }


        /// <summary>
        /// Test the property 'Ordinal'
        /// </summary>
        [Test]
        public void OrdinalTest()
        {
            // TODO unit test for the property 'Ordinal'
        }
        /// <summary>
        /// Test the property 'EffectiveTimeBegin'
        /// </summary>
        [Test]
        public void EffectiveTimeBeginTest()
        {
            // TODO unit test for the property 'EffectiveTimeBegin'
        }
        /// <summary>
        /// Test the property 'EffectiveTimeEnd'
        /// </summary>
        [Test]
        public void EffectiveTimeEndTest()
        {
            // TODO unit test for the property 'EffectiveTimeEnd'
        }
        /// <summary>
        /// Test the property 'ActualTimeEnd'
        /// </summary>
        [Test]
        public void ActualTimeEndTest()
        {
            // TODO unit test for the property 'ActualTimeEnd'
        }
        /// <summary>
        /// Test the property 'MinAltitude'
        /// </summary>
        [Test]
        public void MinAltitudeTest()
        {
            // TODO unit test for the property 'MinAltitude'
        }
        /// <summary>
        /// Test the property 'MaxAltitude'
        /// </summary>
        [Test]
        public void MaxAltitudeTest()
        {
            // TODO unit test for the property 'MaxAltitude'
        }
        /// <summary>
        /// Test the property 'BeyondVisualLineOfSight'
        /// </summary>
        [Test]
        public void BeyondVisualLineOfSightTest()
        {
            // TODO unit test for the property 'BeyondVisualLineOfSight'
        }
        /// <summary>
        /// Test the property 'OperationGeography'
        /// </summary>
        [Test]
        public void OperationGeographyTest()
        {
            // TODO unit test for the property 'OperationGeography'
        }
        /// <summary>
        /// Test the property 'NearStructure'
        /// </summary>
        [Test]
        public void NearStructureTest()
        {
            // TODO unit test for the property 'NearStructure'
        }
        /// <summary>
        /// Test the property 'VolumeType'
        /// </summary>
        [Test]
        public void VolumeTypeTest()
        {
            // TODO unit test for the property 'VolumeType'
        }

    }

}
